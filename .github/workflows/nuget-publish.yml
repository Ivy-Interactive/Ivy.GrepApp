name: Publish to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests (excluding integration tests)
      run: dotnet test --configuration Release --no-build --filter "FullyQualifiedName!~IntegrationTests" --verbosity normal
      
    - name: Update version (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Update version in project files
        sed -i "s/<Version>.*<\/Version>/<Version>${{ github.event.inputs.version }}<\/Version>/" src/Ivy.GrepApp/Ivy.GrepApp.csproj
        sed -i "s/<Version>.*<\/Version>/<Version>${{ github.event.inputs.version }}<\/Version>/" src/grepapp/grepapp.csproj
        
    - name: Extract version from tag (release trigger)
      if: github.event_name == 'release'
      run: |
        # Extract version from release tag (remove 'v' prefix if present)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        # Update version in project files
        sed -i "s/<Version>.*<\/Version>/<Version>$VERSION<\/Version>/" src/Ivy.GrepApp/Ivy.GrepApp.csproj
        sed -i "s/<Version>.*<\/Version>/<Version>$VERSION<\/Version>/" src/grepapp/grepapp.csproj
        
    - name: Pack NuGet packages
      run: |
        dotnet pack src/Ivy.GrepApp/Ivy.GrepApp.csproj --configuration Release --no-build --output ./artifacts
        dotnet pack src/grepapp/grepapp.csproj --configuration Release --no-build --output ./artifacts
      
    - name: Publish to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        retention-days: 30